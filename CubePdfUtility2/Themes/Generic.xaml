<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:cube="clr-namespace:CubePdf.Wpf;assembly=CubePdf.Wpf"
                    xmlns:local="clr-namespace:CubePdfUtility">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/CubePdfUtility;component/Themes/Image.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!-- Integer -->
    <system:Int32 x:Key="NegativeTwo">-2</system:Int32>

    <!-- DataResource -->
    <cube:DataResource x:Key="SelectedItems" BindingTarget="{Binding ElementName=Thumbnail, Path=SelectedItems}"/>
    <cube:DataResource x:Key="SelectedIndex" BindingTarget="{Binding ElementName=Thumbnail, Path=SelectedIndex}"/>
    
    <!-- SystemColors -->
    <Color x:Key="{x:Static SystemColors.GrayTextColorKey}">#FF595959</Color>

    <!-- Converters -->
    <cube:ImageConverter x:Key="ImageConverter"/>
    <cube:ControlToTagConverter x:Key="ControlToTagConverter"/>
    <cube:IsEnabledToVisibilityConverter x:Key="IsEnabledToVisibilityConverter"/>
    <local:ItemHeightConverter x:Key="ItemHeightConverter"/>
    <local:BorderThicknessConverter x:Key="BorderThicknessConverter"/>
    
    <!-- Main themes -->
    <SolidColorBrush x:Key="MainBackgroundBrush" Color="#FF555555"/>
    <SolidColorBrush x:Key="MainForegroundBrush" Color="#FFB3B3B3"/>
    <SolidColorBrush x:Key="MainBorderBrush" Color="#FF000000"/>

    <!-- Header themes -->
    <ImageBrush x:Key="TabBackgroundBrush"
                ImageSource="{StaticResource BackgroundImage}"
                TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,4,4"/>
    <SolidColorBrush x:Key="TabForegroundBrush" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="TabBorderBrush" Color="#FF000000"/>
    <SolidColorBrush x:Key="TabMouseOverBackgroundBrush" Opacity="0.1" Color="#FFFFB700"/>
    <SolidColorBrush x:Key="TabSelectedForegroundBrush" Color="#FFFFFFFF"/>
    
    <!-- Menu themes -->
    <LinearGradientBrush x:Key="MenuBackgroundBrush" EndPoint="0.1,1" StartPoint="0.1,0">
        <GradientStop Color="#FF000000" Offset="1"/>
        <GradientStop Color="#FF303030"/>
        <GradientStop Color="#FF404040" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MenuItemBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="MenuItemForegroundBrush" Color="#FF000000"/>
    <SolidColorBrush x:Key="MenuGalleryCheckedBackgroundBrush" Color="#7FFFD178"/>
    <SolidColorBrush x:Key="MenuAuxiliaryPaneForegroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="MenuAuxiliaryPaneBorderBrush" Color="#FF000000"/>
    
    <!--
      ListView
    
      ListView に関するスタイルを定義します。
      TODO: 別ファイルに分割したい。
    -->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ImageView}, ResourceId=ImageView}"
        TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" Background="{TemplateBinding Background}">
                        <WrapPanel Margin="3" IsItemsHost="True"
                            Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"
                            ItemWidth="{Binding (ListView.View).ItemWidth, RelativeSource={RelativeSource AncestorType=ListView}}"
                            MinWidth="{Binding (ListView.View).ItemWidth, RelativeSource={RelativeSource AncestorType=ListView}}"
                            ItemHeight="{Binding (ListView.View).ItemHeight, RelativeSource={RelativeSource AncestorType=ListView}}">
                        </WrapPanel>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ImageView}, ResourceId=ImageViewItem}"
        TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Margin"  Value="3"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <Viewbox Stretch="Uniform" Name="ThumbnailViewBox"
                            Height="{Binding Path=(ListView.View).ItemHeight, RelativeSource={RelativeSource AncestorType=ListView}, Converter={StaticResource ItemHeightConverter}}">
                            <Border BorderBrush="White">
                                <Border.BorderThickness>
                                    <MultiBinding Converter="{StaticResource BorderThicknessConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding ElementName="ThumbnailImage" Path="ActualWidth"/>
                                            <Binding Path="(ListView.View).ItemWidth" RelativeSource="{RelativeSource AncestorType=ListView}"/>
                                            <Binding ElementName="ThumbnailImage" Path="ActualHeight"/>
                                            <Binding Path="(ListView.View).ItemHeight" RelativeSource="{RelativeSource AncestorType=ListView}"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Border.BorderThickness>
                                <Image Source="{Binding Path=Image, Converter={StaticResource ImageConverter}}" Name="ThumbnailImage" Stretch="Uniform" />
                            </Border>
                        </Viewbox>
                        <TextBlock Text="{Binding Path=Text}" HorizontalAlignment="Right" Foreground="White"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FFC1272D"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#FFC1272D"/>
        </Style.Resources>
    </Style>
</ResourceDictionary>